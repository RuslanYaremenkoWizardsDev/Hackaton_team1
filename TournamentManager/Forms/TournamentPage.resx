<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStripTournamentPage.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LeftPageReturn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAKJSURBVEhLpVU9bNNQEPYIDMAEjAxM2E5DIyEhVhiZCkx0QggkNhBI/AywMjDwI4EoHZkpFRMD
        6gCx3UBUoYoifiJALYX4p3XSpHZjP+5ez41fbCeO+kmfFD1/951y7+6eNAhOtbjX0tUzpiHftnX5IRJ/
        W5p82q6U9pBseNQ1tWTqyrSlKz6QZdADzat6uTBKYYPx+/2xnZahTEJw2GPWjwFwovb24A6yScc/Qz4A
        QiMWOBw1Rf+rKfvJTgRmR0FqoF5g7aVJFqwvssbXqynfu7R1pbJUKe0i2y6oLMkgo8g88zWLsNGYS2qS
        fEa2m3AMuQiHWEdBaM+WmO/MkDUg9Jj75bKgyWCITUL2kkTdIojsylHmr2rkDN5Bi7kLFwVNP9qGOsXN
        sZfhwBM+fjjOSxEh7Lhsdf6cYJCDPs4Q1v5s/INTPck67RpZMxb4dbbyaSwemJ8wjBKfSjpYmTvFAu8P
        WSNC6J7nrFm7k5uNb9egMUa4H5T+pmRqyuMoQaf1nYy3h7Wf97gfrhUJLuNRlGCjOU+S7aFZu0sJlAfY
        QbeiBE71BNT/B8kQIWstPoHhupKb7ufz4KVyP6jOjcQlp3fQ+Nb3oYiXnNqmfAbKlAJnoA0zcEkMHkCo
        zLqlHdrNZwFXbkJkjDLPfkMpAKEPJei/h+KEC37JzRGOLo/AYWJVYLt55jRlAIQBtOF1UZPOIPFGwOFE
        j4gIm3T5BWXAZfcxRdNDQ35Ktl3wda2rWmoAcO3XfX757sKF1O8RcV3jo0W2IvCxyH4TcrG8/K6wj+zS
        sflPeLmSd5LNAMsy8MmMw5k9fARXLgQLLdxDD7sF3xMKGx7YyzgwuLhw9JH4G87Gtvo8E5L0H5tSgAXR
        ZTMCAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="buttonRightPageForward.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAJdSURBVEhLpVU9bNNQEPYIDMAEjB2Y8LPbkqkSGwPs/CzsqBsSTPyoYmFhQIifAVGBkNgYoLAw
        IHWi9TOBZgEhkFpKpdI2sa2QBMcG+3H3fEmc5CV2mk/6pOj83Xfx+d49LQveytRBhxvnKrZ+w+X6fST+
        diz9rFssHCDZ6ChbRqHC2RuHsxAoBjAAzevysnmc0rKxsTSz17HZE0iOe8yGMQLOry1O7CEbNXZs/QgI
        7VTiaLQY37bYYbLrBlZHgTKxTVM0ywvin78ufn+9qHjOhMtZcbNY2Ee2HVBblEkteqVToo04FLXvV5Q6
        4GOyTeDZ+hQEsY8qcRebOy+pAiCORH3tpkoX45CQvabRtKiEChrC//WMKiBi0fh5p0/n2saCNMdZhkDQ
        K8gimqbhbz2HuJHWhHiGsPfnU8GR2PhxC6yjpAIAB8CxJzsaOIyaPJUU8FZOivrqnOxrXoZVTvYJAuct
        FJmWftD6a1rFYg9bBf7Wv5BsPPzZuCv9cK1o8DEetAvUSiQZD43121SA3cMJut4q4H48IWrfLsF8X87N
        sGqRbYLm9gtokSn9oDtXx/vIWZOEH3l3Y5p9FqAzTcc6ul+eBVy56YdDCa+f5zTDB34lzREe1ychmGNV
        mCJw35EzYPA+ivruCAjO94j66JVOkzP+cR826qxS59j6I7LtQK5rbljKhBT9zacwzp9E9fMF5XNc13hp
        kW038LLIvhOGcnnrvXmI7NRI3kS2K9f6JkbYlswrMw3vw7FpXLmQPGyEA5wWvE8obXTgLOOBwcWFRx+J
        vyF2pj3nA6Fp/wFKvoAcdAL2+gAAAABJRU5ErkJggg==
</value>
  </data>
</root>